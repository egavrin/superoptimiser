cmdhistory=["(map char (concat (range 48 58)))" "(map str(char)\\n    (concat (range 48 58)))" "(map char (concat (range 65 75)))" "(codez \\"fred\\")" "alphabet" "(take 5 alpha-seq)" "(take 5 (alpha-seq))" "(map \#(cons %1 %2) alphabet)" "(map \#(cons % %) alphabet)" "(map \#(%) alphabet)" "(map str alphabet)" "(cons \\"a\\" (map str alphabet))" "(map \#(cons \\"a\\") (map str alphabet))" "(map \#(cons \\"a\\" %) (map str alphabet))" "(take 5 alpha-seq)" "(take 5 (alpha-seq))" "(take 27 (alpha-seq))" "(alpha \\"a\\")" "(alpha \\\\A)" "(alpha \\"ab\\")" "(alpha \\"A\\")" "(take 5 (alpha-seq))" "(take 5 (iterate alpha \\"\\"))" "(alpha \\"AB\\")" "(take 5 (alpha \\"AB\\"))" "(take 5 (alpha-seq))" "(iterate alpha \\"\\")" "(take 5 (alpha-seq \\"\\"))" "(alpha \\"\\")" "(take 5 (alpha-seq \\"\\"))" "(take 27 (alpha-seq \\"\\"))" "(take 35 (alpha-seq \\"\\"))" "(take 5 (alpha-seq))" "(alpha \\"A\\")" "(alpha \\"AB\\")" "(alpha-seq \\"A\\")" "(take 5 (alpha-seq))" "(take 30 (alpha-seq))" "(alpha \\"A\\")" "(alpha \\"AB\\")" "(alpha \\"A\\")" "(alpha)" "(alpha \\"\\")" "(alpha \\"A\\")" "(take 30 (iterate alpha \\"A\\"))" "(take 30 (flatten (iterate alpha \\"A\\")))" "(flatten (take 30 (iterate alpha \\"A\\")))" "(take 30 (flatten (iterate alpha \\"A\\")))" "(take 30 (flatten (iterate alpha \\"AB\\")))" "a" "(a)" "a" "(a)" "a" "(a)" "a" "(a)" "a" "(a)" "(a 1)" "(alpha-seq)" "(nth alphabet 1)" "(nth alphabet 0)" "(cons \\"fred\\" (nth alphabet 0))" "(cons (\\"fred\\" (nth alphabet 0)))" "cons \\"fred\\" \\"jim\\"" "(cons \\"fred\\" \\"jim\\")" "(str \\"fred\\" \\\\n)" "(alpha-seq \\"hey\\" alphabet 0)" "(alpha-seq)" "(alpha-seq \\"\\")" "(alpha-seq \\"A\\")" "(alpha-seq \\"\\")" "(take 5 (alpha-seq \\"\\"))" "(take 30 (alpha-seq \\"\\"))" "(mapcat alpha-seq (map \#(str a %) alphabet))" "(mapcat alpha-seq (map \#(str a \\"A\\") alphabet))" "(mapcat alpha-seq (map \#(str \\"A\\" %) alphabet))" "(take 5 (alpha-seq \\"\\"))" "(take 25 (alpha-seq \\"\\"))" "(take 25 (alpha-seq \\"\\" 1))" "(take 25 (alpha-seq \\"\\"))" "(take 25 (alpha-seq \\"\\" 3))" "(take 25 (alpha-seq \\"\\"))" "(take 25 (alpha-seq \\"\\" 3))" "(take 25 (alpha-seq \\"A\\" 3))" "(take 25 (alpha-seq \\"\\" 3))" "(take 25 (alpha-seq \\"\\" 4))" "(take 25 (alpha-seq \\"\\" 3))" "(take 25 (alpha-seq \\"\\" 4))" "(take 25 (alpha-seq \\"\\" 3))" "(take 25 (make-tree \\"\\" 3))" "(take 25 (make-tree \\"\\" 3 ()))" "(make-tree \\"\\" () 3)" "Anyone able to help a newbie with an implementation of a lazy sequence?" "(make-tree \\"\\" () 3)" "l" "(make-tree \\"\\" () 3)" "(use 'clojure.contrib.combinatorics)" "(use 'clojure.math.combinatorics)"]
eclipse.preferences.version=1
